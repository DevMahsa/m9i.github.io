{"version":3,"sources":["webpack:///./src/components/SEO.js","webpack:///./src/components/layout.js","webpack:///./src/pages/404.js"],"names":["SEO","meta","image","title","description","slug","lang","query","render","data","siteMetadata","site","metaDescription","metaImage","siteUrl","url","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","Layout","state","theme","componentDidMount","this","setState","window","__theme","__onThemeChange","renderHeader","props","location","pathname","style","scale","marginBottom","marginTop","boxShadow","textDecoration","color","to","fontFamily","height","lineHeight","children","background","transition","minHeight","marginLeft","marginRight","maxWidth","rhythm","padding","display","justifyContent","alignItems","Toggle","icons","checked","src","moon","width","role","pointerEvents","alt","unchecked","sun","onChange","e","__setPreferredTheme","target","React","Component","NotFoundPage","siteTitle","pageQuery"],"mappings":"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","file":"component---src-pages-404-js-989f1141f221664dd640.js","sourcesContent":["import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nfunction SEO({ meta, image, title, description, slug, lang = \"en\" }) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site\n        const metaDescription = description || siteMetadata.description\n        const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null\n        const url = `${siteMetadata.siteUrl}${slug}`\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s — ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: `${siteMetadata.title} — A blog by Dan Abramov`,\n                })}\n            meta={[\n              {\n                name: \"description\",\n                content: metaDescription,\n              },\n              {\n                property: \"og:url\",\n                content: url,\n              },\n              {\n                property: \"og:title\",\n                content: title || siteMetadata.title,\n              },\n              {\n                property: \"og:description\",\n                content: metaDescription,\n              },\n              {\n                name: \"twitter:card\",\n                content: \"summary\",\n              },\n              {\n                name: \"twitter:creator\",\n                content: siteMetadata.social.twitter,\n              },\n              {\n                name: \"twitter:title\",\n                content: title || siteMetadata.title,\n              },\n              {\n                name: \"twitter:description\",\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: \"og:image\",\n                        content: metaImage,\n                      },\n                      {\n                        name: \"twitter:image\",\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  meta: [],\n  title: \"\",\n  slug: \"\",\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Toggle from \"./Toggle\"\nimport Helmet from \"react-helmet\"\n\nimport { rhythm, scale } from \"../utils/typography\"\nimport sun from \"../assets/sun.png\"\nimport moon from \"../assets/moon.png\"\n\nclass Layout extends React.Component {\n  state = {\n    theme: null,\n  }\n  componentDidMount() {\n    this.setState({ theme: window.__theme })\n    window.__onThemeChange = () => {\n      this.setState({ theme: window.__theme })\n    }\n  }\n  renderHeader() {\n    const { location, title } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n\n    if (location.pathname === rootPath) {\n      return (\n        <h1\n          style={{\n            ...scale(0.75),\n            marginBottom: 0,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: \"none\",\n              textDecoration: \"none\",\n              color: \"var(--textTitle)\",\n            }}\n            to={\"/\"}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      return (\n        <h3\n          style={{\n            fontFamily: \"Montserrat, sans-serif\",\n            marginTop: 0,\n            marginBottom: 0,\n            height: 42, // because\n            lineHeight: \"2.625rem\",\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: \"none\",\n              textDecoration: \"none\",\n              color: \"rgb(255, 167, 196)\",\n            }}\n            to={\"/\"}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n  }\n  render() {\n    const { children } = this.props\n\n    return (\n      <div\n        style={{\n          color: \"var(--textNormal)\",\n          background: \"var(--bg)\",\n          transition: \"color 0.2s ease-out, background 0.2s ease-out\",\n          minHeight: \"100vh\",\n        }}\n      >\n        <Helmet\n          meta={[\n            {\n              name: \"theme-color\",\n              content: this.state.theme === \"light\" ? \"#ffa8c5\" : \"#282c35\",\n            },\n          ]}\n        />\n        <div\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxWidth: rhythm(24),\n            padding: `2.625rem ${rhythm(3 / 4)}`,\n          }}\n        >\n          <header\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginBottom: \"2.625rem\",\n            }}\n          >\n            {this.renderHeader()}\n            {this.state.theme !== null ? (\n              <Toggle\n                icons={{\n                  checked: (\n                    <img\n                      src={moon}\n                      width=\"16\"\n                      height=\"16\"\n                      role=\"presentation\"\n                      style={{ pointerEvents: \"none\" }}\n                      alt=\"aa\"\n                    />\n                  ),\n                  unchecked: (\n                    <img\n                      src={sun}\n                      width=\"16\"\n                      height=\"16\"\n                      role=\"presentation\"\n                      style={{ pointerEvents: \"none\" }}\n                      alt=\"aaa\"\n                    />\n                  ),\n                }}\n                checked={this.state.theme === \"dark\"}\n                onChange={e =>\n                  window.__setPreferredTheme(\n                    e.target.checked ? \"dark\" : \"light\"\n                  )\n                }\n              />\n            ) : (\n              <div style={{ height: \"24px\" }} />\n            )}\n          </header>\n          {children}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/SEO\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}